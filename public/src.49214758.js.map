{"version":3,"sources":["src/lib/GameView.js","src/lib/PlayerView.js","src/lib/Utils.js","src/lib/Player.js","src/lib/Game.js","src/App.js","src/index.js"],"names":["GameView","constructor","game","ctx","width","canvas","ratio","height","styles","backgroundColor","draw","drawBackground","clearRect","fillStyle","fillRect","setCanvasSize","PlayerView","player","style","color","highlight","drawRay","mouse","save","lineWidth","strokeStyle","beginPath","moveTo","x","y","target","distanceTo","mag","limit","add","lineTo","stroke","restore","drawReticle","translate","closePath","loc","rotate","angle","arc","Math","PI","fill","Vector","set","v2","sub","mult","val","div","getAngle","atan2","setAngle","magnitude","cos","sin","sqrt","angleTo","d","magnitudeSq","norm","len","max","mSq","cutoff","abs","copy","Player","velocity","acc","topSpeed","view","moving","up","down","left","right","setup","window","addEventListener","keydown","bind","keyup","setdown","removeEventListener","e","key","update","decell","checkBounds","mouseMoved","mouseVector","tick","Game","innerWidth","innerHeight","getCtx","run","listen","drawLoop","mouseMove","clientX","clientY","requestAnimationFrame","resize","setSize","backingStoreRatio","webkitBackingStorePixelRatio","mozBackingStorePixelRatio","msBackingStorePixelRatio","oBackingStorePixelRatio","backingStorePixelRatio","devicePixelRatio","oldWidth","oldHeight","scale","getContext","imageSmoothingEnabled","App","id","canvasId","init","document","getElementById","onresize","app","startup","onload","console","log"],"mappings":"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","file":"src.49214758.js","sourceRoot":"..","sourcesContent":["export class GameView {\n  constructor(game) {\n    this.game = game;\n    this.ctx = game.ctx;\n    this.width = this.ctx.canvas.width / game.ratio;\n    this.height = this.ctx.canvas.height / game.ratio;\n\n    this.styles = {\n      backgroundColor: '#d4d4d4',\n    };\n  }\n\n  draw() {\n    this.drawBackground();\n  }\n\n  drawBackground() {\n    this.ctx.clearRect(0, 0, this.width, this.height);\n    this.ctx.fillStyle = this.styles.backgroundColor;\n    this.ctx.fillRect(0, 0, this.width, this.height);\n  }\n\n  setCanvasSize(width, height) {}\n}\n","export class PlayerView {\n  constructor(player) {\n    this.player = player;\n    this.ctx = player.ctx;\n    this.style = {\n      color: '#616a74',\n      highlight: '#d16a74',\n    };\n  }\n\n  drawRay(player, mouse) {\n    const maxDist = 100;\n    this.ctx.save();\n    // this.ctx.translatse(player.x, player.y);\n    this.ctx.lineWidth = 1;\n    this.ctx.strokeStyle = this.style.highlight;\n\n    this.ctx.beginPath();\n    this.ctx.moveTo(player.x, player.y);\n\n    // const mid = player.copy().add(player.distanceTo(mouse).div(2))\n    // this.ctx.lineTo(mouse.x, mouse.y);\n\n    const target = player.distanceTo(mouse);\n    if (target.mag() >= maxDist) {\n      target.limit(maxDist);\n    }\n\n    target.add(player);\n    this.ctx.lineTo(target.x, target.y);\n    this.ctx.stroke();\n    this.ctx.restore();\n  }\n\n  drawReticle(player, mouse) {\n    const radius = 20;\n    if (!mouse) return;\n    this.drawRay(player, mouse);\n\n    this.ctx.save();\n\n    this.ctx.translate(mouse.x, mouse.y);\n\n    this.ctx.beginPath();\n\n    // this.ctx.arc(0, 0, 2, 0, 2 * Math.PI, false);\n    // this.ctx.fillStyle = this.style.color;\n    // this.ctx.fill();\n\n    // this.ctx.fillStyle = this.style.color;\n\n    this.ctx.moveTo(-10,0)\n    this.ctx.lineTo(-3,0)\n    \n    this.ctx.moveTo(3,0)\n    this.ctx.lineTo(10,0)\n\n    this.ctx.moveTo(0,-10)\n    this.ctx.lineTo(0,-3)\n    this.ctx.moveTo(0,3)\n    this.ctx.lineTo(0,10)\n    this.ctx.lineWidth = 1;\n    this.ctx.strokeStyle = this.style.color;\n    this.ctx.stroke()\n    this.ctx.closePath()\n\n    this.ctx.restore();\n  }\n\n  draw(game) {\n    let radius = 10;\n    this.ctx.save();\n    this.ctx.translate(this.player.loc.x, this.player.loc.y);\n    this.ctx.rotate(this.player.angle);\n\n    // Circle\n    this.ctx.fillStyle = this.style.color;\n    this.ctx.arc(0, 0, radius, 0, 2 * Math.PI, false);\n    this.ctx.fill();\n\n    // // Line\n    // this.ctx.lineWidth = 10;\n    // this.ctx.strokeStyle = this.style.highlight;\n    // this.ctx.beginPath();\n    // this.ctx.moveTo(0, 0);\n    // this.ctx.lineTo(30, 0);\n    // this.ctx.stroke();\n\n    this.ctx.restore();\n    this.drawReticle(this.player.loc, game.mouse);\n  }\n}\n","export class Vector {\n  constructor(x = 0, y = 0) {\n    this.x = x;\n    this.y = y;\n  }\n\n  set(x, y) {\n    this.x = x;\n    this.y = y;\n  }\n\n  distanceTo(v2) {\n    return new Vector(v2.x - this.x, v2.y - this.y);\n  }\n\n  add(v2) {\n    this.x += v2.x;\n    this.y += v2.y;\n    return this;\n  }\n\n  sub(v2) {\n    this.x -= v2.x;\n    this.y -= v2.y;\n  }\n\n  mult(val) {\n    this.x *= val;\n    this.y *= val;\n    return this;\n  }\n\n  div(val) {\n    this.x /= val;\n    this.y /= val;\n    return this;\n  }\n\n  getAngle() {\n    return Math.atan2(this.y, this.x);\n  }\n\n  setAngle(angle) {\n    var magnitude = this.mag();\n    this.x = Math.cos(angle) * magnitude;\n    this.y = Math.sin(angle) * magnitude;\n\n    return this;\n  }\n\n  mag() {\n    return Math.sqrt(this.x * this.x + this.y * this.y);\n  }\n\n  angleTo(v2) {\n    const d = this.distanceTo(v2);\n    return d.getAngle();\n  }\n\n  magnitudeSq() {\n    return this.x * this.x + this.y * this.y;\n  }\n\n  norm() {\n    const len = this.mag();\n    if (len !== 0) this.mult(1 / len);\n    return this;\n  }\n\n  limit(max) {\n    const mSq = this.magnitudeSq();\n    if (mSq > max * max) {\n      this.div(Math.sqrt(mSq)).mult(max);\n    }\n    return this;\n  }\n\n  cutoff(val) {\n    this.x = Math.abs(this.x) < val ? 0 : this.x;\n    this.y = Math.abs(this.y) < val ? 0 : this.y;\n  }\n  copy() {\n    return new Vector(this.x, this.y);\n  }\n}\n","import { PlayerView } from './PlayerView';\nimport { Vector } from './Utils';\n\nexport class Player {\n  constructor(game) {\n    this.game = game;\n    this.ctx = game.ctx;\n    this.loc = new Vector(300, 150);\n    this.velocity = new Vector(0, 0);\n    this.acc = new Vector(0.5, 0.5);\n    this.topSpeed = 10;\n    this.angle = 0;\n    this.view = new PlayerView(this);\n    this.moving = {\n      up: false,\n      down: false,\n      left: false,\n      right: false,\n    };\n    this.setup();\n  }\n\n  setup() {\n    window.addEventListener('keydown', this.keydown.bind(this), false);\n    window.addEventListener('keyup', this.keyup.bind(this), false);\n  }\n  setdown() {\n    this.ctx.canvas.removeEventListener('keydown', this.keydown.bind(this));\n    this.ctx.canvas.removeEventListener('keyup', this.keyup.bind(this));\n  }\n\n  keydown(e) {\n    const { key } = e;\n    if (key === 'w') this.moving.up = true;\n    if (key === 'a') this.moving.left = true;\n    if (key === 's') this.moving.down = true;\n    if (key === 'd') this.moving.right = true;\n  }\n\n  keyup(e) {\n    const { key } = e;\n    if (key === 'w') this.moving.up = false;\n    if (key === 'a') this.moving.left = false;\n    if (key === 's') this.moving.down = false;\n    if (key === 'd') this.moving.right = false;\n  }\n\n  update() {\n    if (!this.mouse) return;\n    this.angle = this.loc.angleTo(this.mouse);\n    const acc = new Vector(0, 0);\n    const decell = new Vector(0, 0);\n    const accAmt = 1;\n    if (this.moving.up) acc.y = -accAmt;\n    if (this.moving.down) acc.y = accAmt;\n    if (this.moving.left) acc.x = -accAmt;\n    if (this.moving.right) acc.x = accAmt;\n\n    if (acc.x === 0 && acc.y === 0) {\n      if (this.velocity.x >= 0.5) {\n        decell.x = -1;\n      }\n      if (this.velocity.x <= -0.5) {\n        decell.x = 1;\n      }\n      if (this.velocity.y >= 0.5) {\n        decell.y = -1;\n      }\n      if (this.velocity.y <= -0.5) {\n        decell.y = 1;\n      }\n      this.velocity.add(decell);\n    }\n    this.velocity.cutoff(0.5);\n    this.velocity.add(acc);\n    this.velocity.limit(this.topSpeed);\n    this.loc.add(this.velocity);\n\n    // if (this.moving.up) this.loc.y -= this.velocity;\n    // if (this.moving.down) this.loc.y += this.velocity;\n    // if (this.moving.left) this.loc.x -= this.velocity;\n    // if (this.moving.right) this.loc.x += this.velocity;\n    // console.log(`acc: `, acc);\n\n  }\n\n  checkBounds() {\n    if (this.loc.x <= 0) this.loc.x = 0;\n    if (this.loc.x >= this.game.width) this.loc.x = this.game.width;\n    if (this.loc.y <= 0) this.loc.y = 0;\n    if (this.loc.y >= this.game.height) this.loc.y = this.game.height;\n  }\n\n  mouseMoved(mouseVector) {\n    this.mouse = mouseVector;\n    this.angle = this.loc.angleTo(mouseVector);\n  }\n\n  tick() {\n    this.update();\n    this.checkBounds();\n  }\n\n  draw() {\n    this.view.draw(this.game);\n  }\n}\n","import { GameView } from './GameView';\nimport { Player } from './Player';\nimport { Vector } from './Utils';\nexport class Game {\n  constructor(canvas) {\n    this.canvas = canvas;\n    this.width = window.innerWidth;\n    this.height = window.innerHeight;\n    this.ctx = this.getCtx();\n\n    this.view = new GameView(this);\n    this.player = new Player(this);\n    this.mouse = new Vector(0, 0);\n  }\n\n  run() {\n    this.listen();\n    this.drawLoop();\n  }\n\n  listen() {\n    this.ctx.canvas.addEventListener('mousemove', this.mouseMove.bind(this));\n  }\n\n  mouseMove(e) {\n    this.mouse.set(e.clientX, e.clientY);\n    this.player.mouseMoved(this.mouse);\n  }\n\n  drawLoop() {\n    this.view.draw();\n    this.player.tick();\n    this.player.draw();\n\n    requestAnimationFrame(() => {\n      this.drawLoop();\n    });\n  }\n\n  drawBackground() {\n    this.ctx.clearRect(0, 0, this.width, this.height);\n    this.ctx.fillStyle = this.styles.backgroundColor;\n    this.ctx.fillRect(0, 0, this.width, this.height);\n  }\n\n  resize(width, height) {\n    this.setSize(width, height);\n    this.view.width = width;\n    this.view.height = height;\n  }\n\n  setSize(width, height) {\n    this.width = width;\n    this.height = height;\n    this.canvas.width = width;\n    this.canvas.height = height;\n\n    let backingStoreRatio =\n      this.ctx.webkitBackingStorePixelRatio ||\n      this.ctx.mozBackingStorePixelRatio ||\n      this.ctx.msBackingStorePixelRatio ||\n      this.ctx.oBackingStorePixelRatio ||\n      this.ctx.backingStorePixelRatio ||\n      1;\n    let devicePixelRatio = window.devicePixelRatio || 1;\n    this.ratio = devicePixelRatio / backingStoreRatio;\n\n    if (devicePixelRatio !== backingStoreRatio) {\n      let oldWidth = this.canvas.width;\n      let oldHeight = this.canvas.height;\n      this.canvas.width = oldWidth * this.ratio;\n      this.canvas.height = oldHeight * this.ratio;\n      this.canvas.style.width = oldWidth + 'px';\n      this.canvas.style.height = oldHeight + 'px';\n      this.ctx.scale(this.ratio, this.ratio);\n    }\n  }\n\n  getCtx() {\n    this.ctx = this.canvas.getContext('2d');\n    this.ctx.imageSmoothingEnabled = true;\n    this.setSize(this.width, this.height);\n    return this.ctx;\n  }\n}\n","import { Game } from './lib/Game';\nexport class App {\n  constructor(id, width, height) {\n    this.canvasId = id;\n    this.width = width;\n    this.height = height;\n  }\n\n  init() {\n    const canvas = document.getElementById('canvas');\n    this.game = new Game(canvas);\n    this.game.run();\n\n    window.onresize = (e) => {\n      this.game.resize(window.innerWidth, window.innerHeight);\n    };\n  }\n}\n","import { App } from './App';\nimport './styles/style.css';\n\nlet app;\nasync function startup() {\n  app = new App('canvas', 600, 400);\n  await app.init();\n\n}\n\nwindow.onload = function () {\n  console.log(`window loaded. Booting app`);\n  startup();\n  console.log(`booted.`);\n};\n"]}